<?php

namespace common\models;

use common\behaviors\ImgUploadBehavior;
use Yii;
use yii\helpers\ArrayHelper;

/**
 * This is the model class for table "tour-period-rooms".
 *
 * @property int $id
 * @property int $period_id
 * @property int $room_id
 * @property int $price
 * @property int $publish
 *
 * @property Booking[] $bookings
 * @property TourPeriod $period
 * @property Room $room
 */
class TourPeriodRooms extends \yii\db\ActiveRecord
{
    public $maxCount;

    public function afterFind()
    {
        //$this->maxCount = $this->tour->max_count;
        parent::afterFind();
    }

    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'tour_period_rooms';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['period_id', 'room_id', 'price'], 'required'],
            [['period_id', 'publish', 'room_id', 'price'], 'integer'],
            [['period_id'], 'exist', 'skipOnError' => true, 'targetClass' => TourPeriod::className(), 'targetAttribute' => ['period_id' => 'id']],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'period_id' => 'Период',
            'room_id' => 'Комната',
            'price' => 'Цена',
            'publish' => 'Публикация',
        ];
    }

    public function behaviors()
    {
        return [
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getPeriod()
    {
        return $this->hasOne(TourPeriod::className(), ['id' => 'period_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getRoom()
    {
        return $this->hasOne(Room::className(), ['id' => 'room_id']);
    }

    public static function getRoomsFromDropDown()
    {
        return ArrayHelper::map(Accom::find()->all(), 'id', 'title');
    }

    public function beforeSave($insert)
    {
        /*
        if ($this->title){

            $this->title =
                is_string($this->title)
                    ? strtotime('01.'.$this->title)
                    : $this->title;
        }else{
            $this->title = time();
        }
        */
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

}
