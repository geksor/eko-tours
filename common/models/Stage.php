<?php

namespace common\models;

use Yii;

/**
 * This is the model class for table "stage".
 *
 * @property int $id
 * @property int $month_id
 * @property int $start_date
 * @property int $end_date
 * @property int $price
 * @property int $publish
 * @property int $deleted
 * @property int $places
 *
 * @property Booking[] $bookings
 * @property Month $month
 */
class Stage extends \yii\db\ActiveRecord
{
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'stage';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['month_id', 'price'], 'required'],
            [['start_date', 'end_date',], 'safe'],
            [['month_id', 'places', 'price', 'publish', 'deleted'], 'integer'],
            [['month_id'], 'exist', 'skipOnError' => true, 'targetClass' => Month::className(), 'targetAttribute' => ['month_id' => 'id']],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'month_id' => 'Месяц',
            'start_date' => 'Начало заезда',
            'end_date' => 'Завершение заезда',
            'places' => 'Кол-во мест',
            'price' => 'Цена',
            'publish' => 'Публикация',
            'deleted' => 'Удален',
        ];
    }

    public static function getStartDate($month_id)
    {
        return Yii::$app->formatter->asDate(Month::findOne(['id' => $month_id])->title, 'php:d.m.Y H:i');
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getBookings()
    {
        return $this->hasMany(Booking::className(), ['stage_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getMonth()
    {
        return $this->hasOne(Month::className(), ['id' => 'month_id']);
    }
    public function beforeSave($insert)
    {
        if ($this->start_date){

            $this->start_date =
                is_string($this->start_date)
                    ? strtotime($this->start_date)
                    : $this->start_date;
        }
        if ($this->end_date){

            $this->end_date =
                is_string($this->end_date)
                    ? strtotime($this->end_date)
                    : $this->end_date;
        }
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }
}
